name: Bump and Release Obsidian plugin

on:
  push:
    branches: [main]
    tags:
      - '*'  # триггерится также на push любого тега

permissions:
  contents: write

jobs:
  bump:
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: npm install

      - name: Build plugin
        run: npm run build

      - name: Bump version in manifest
        run: |
          node - <<'NODE'
          const fs = require('fs');
          const manifest = JSON.parse(fs.readFileSync('manifest.json', 'utf8'));
          const parts = manifest.version.split('.').map(n => parseInt(n, 10));
          while (parts.length < 3) parts.push(0);
          parts[2] = (parts[2] || 0) + 1;
          manifest.version = parts.join('.');
          fs.writeFileSync('manifest.json', JSON.stringify(manifest, null, 2) + '\n');
          NODE

      - name: Commit bumped version
        uses: EndBug/add-and-commit@v9
        with:
          add: 'manifest.json dist/main.js'
          message: 'chore: bump manifest version'

      - name: Create and push tag
        run: |
          version=$(node -p "require('./manifest.json').version")
          git tag "v$version"
          git push origin "v$version"

  release:
    needs: bump
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: npm ci

      - name: Build plugin
        run: npm run build

      - name: Create plugin zip
        run: |
          mkdir -p release
          cp dist/main.js manifest.json release/
          cd release
          zip plugin.zip main.js manifest.json

      - name: Create GitHub release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          gh release create "$TAG" \
            --title "$TAG" \
            --notes "Automated release for $TAG" \
            release/plugin.zip \
            release/main.js \
            release/manifest.json